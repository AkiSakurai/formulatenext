From b8c153d3c900433938722de4425fcd05ffac79c6 Mon Sep 17 00:00:00 2001
From: Andrew de los Reyes <adlr@chromium.org>
Date: Wed, 1 May 2019 21:04:34 -0700
Subject: [PATCH] EXPERIMENTAL: wasm build

---
 config/BUILDCONFIG.gn       |  2 ++
 config/compiler/BUILD.gn    |  6 +++---
 toolchain/gcc_toolchain.gni |  2 +-
 toolchain/wasm/BUILD.gn     | 19 +++++++++++++++++++
 4 files changed, 25 insertions(+), 4 deletions(-)
 create mode 100644 toolchain/wasm/BUILD.gn

diff --git a/config/BUILDCONFIG.gn b/config/BUILDCONFIG.gn
index 9fea836a4..eb7764f3e 100644
--- a/config/BUILDCONFIG.gn
+++ b/config/BUILDCONFIG.gn
@@ -254,6 +254,8 @@ if (target_os == "android") {
   _default_toolchain = "//build/toolchain/win:uwp_$target_cpu"
 } else if (target_os == "aix") {
   _default_toolchain = "//build/toolchain/aix:$target_cpu"
+} else if (target_os == "wasm") {
+  _default_toolchain = "//build/toolchain/wasm:wasm"
 } else {
   assert(false, "Unsupported target_os: $target_os")
 }
diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index c7a015070..0e498bd92 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -471,7 +471,7 @@ config("compiler") {
     }
   }
 
-  if (is_clang && !is_nacl && !use_xcode_clang) {
+  if (is_clang && !is_nacl && !(target_os == "wasm") && !use_xcode_clang) {
     cflags += [ "-fcrash-diagnostics-dir=" +
                 rebase_path("//tools/clang/crashreports", root_build_dir) ]
 
@@ -1495,7 +1495,7 @@ config("default_warnings") {
         cflags += [
           # Ignore warnings about MSVC optimization pragmas.
           # TODO(thakis): Only for no_chromium_code? http://crbug.com/912662
-          "-Wno-ignored-pragma-optimize",
+          #"-Wno-ignored-pragma-optimize",
         ]
         if (is_fuchsia) {
           cflags += [
@@ -1699,7 +1699,7 @@ config("thin_archive") {
   # have a "thin archive" mode (it does accept -T, but it means truncating
   # archive names to 16 characters, which is not what we want).
   if ((is_posix && !is_nacl && !is_mac && !is_ios) || is_fuchsia) {
-    arflags = [ "-T" ]
+    arflags = [ "T" ]
   } else if (is_win && use_lld) {
     arflags = [ "/llvmlibthin" ]
   }
diff --git a/toolchain/gcc_toolchain.gni b/toolchain/gcc_toolchain.gni
index 80e2a362a..68b0d0c15 100644
--- a/toolchain/gcc_toolchain.gni
+++ b/toolchain/gcc_toolchain.gni
@@ -358,7 +358,7 @@ template("gcc_toolchain") {
       } else {
         rspfile = "{{output}}.rsp"
         rspfile_content = "{{inputs}}"
-        command = "\"$ar\" {{arflags}} -r -c -s -D {{output}} @\"$rspfile\""
+        command = "\"$ar\" {{arflags}}rcsD {{output}} @\"$rspfile\""
       }
 
       # Remove the output file first so that ar doesn't try to modify the
diff --git a/toolchain/wasm/BUILD.gn b/toolchain/wasm/BUILD.gn
new file mode 100644
index 000000000..e6a9fc7fd
--- /dev/null
+++ b/toolchain/wasm/BUILD.gn
@@ -0,0 +1,19 @@
+# Copyright 2016 The Chromium Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+import("//build/toolchain/gcc_toolchain.gni")
+
+gcc_toolchain("wasm") {
+  executable_extension = ".js"
+  cc = "emcc"
+  cxx = "em++"
+  ar = "emar"
+  ld = "emcc"
+  toolchain_args = {
+    # Use all values set on the invoker's toolchain_args.
+    #forward_variables_from(invoker.toolchain_args, "*")
+    current_cpu = "wasm"
+    current_os = "wasm"
+  }
+}
-- 
2.11.0

